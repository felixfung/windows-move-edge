#!/usr/bin/perl
#
#------------------------------------------------------------------------------
# moves current window to the next edge in one of four directions
# takes in one parameter, 'W', 'N', 'E', or 'S'
# to move windows in that direction
# uses PERL and xdotool
#------------------------------------------------------------------------------
if( $ARGV[0] eq "W" ) {
    $axis = 'x';
    $axis_rev = -1;
}
elsif( $ARGV[0] eq "N" ) {
    $axis = 'y';
    $axis_rev = -1;
}
elsif( $ARGV[0] eq "E" ) {
    $axis ='x';
    $axis_rev = 1;
}
elsif( $ARGV[0] eq "S" ) {
    $axis = 'y';
    $axis_rev = 1;
}

#------------------------------------------------------------------------------
# set offsets based on desktop environment
# take account of title bar, panel, etc width and height
#------------------------------------------------------------------------------

$win_offset_x = 20;
$win_offset_y = 0;

$panel_offset_W = 0;
$panel_offset_N = 27;
$panel_offset_E = 0;
$panel_offset_S = 0;

#------------------------------------------------------------------------------
# grab screen and active window geometry
#------------------------------------------------------------------------------

$screen = `xdotool getdisplaygeometry`;
if( $screen =~ /(\d+) (\d+)/ ) {
    $screen_width = $1;
    $screen_height = $2;
}

$active_window_pos = `xdotool getactivewindow getwindowgeometry`;
if( $active_window_pos =~ /Position: (\d+),(\d+)/ ) {
    $active_window_x = $1;
    $active_window_y = $2;
}
if( $active_window_pos =~ /Geometry: (\d+)x(\d+)/ ) {
    $active_window_width = $1;
    $active_window_height = $2;
}

$edge_x[0] = $panel_offset_W +$win_offset_x;
$edge_x[1] = $screen_width -$panel_offset_E -$active_window_width;
$edge_y[0] = $panel_offset_N;
$edge_y[1] = $screen_height -$panel_offset_S -$active_window_height;

#------------------------------------------------------------------------------
# grab all other windows geometry and store as edge arrays
#------------------------------------------------------------------------------

@window_ids = split( "\n", `xdotool search --onlyvisible . 2>/dev/null` );

foreach $wid (@window_ids) {
    if( $wid == `xdotool getactivewindow` ) { next; }
    $win_raw = `xdotool getwindowgeometry $wid`;
    if( $win_raw =~ /Position: (\d+),(\d+)/ ) {
        $win_left = $1;
        $win_top = $2;
    }
    if( $win_raw =~ /Geometry: (\d+)x(\d+)/ ) {
        $win_right = $win_left +$1;
        $win_bottom = $win_top +$2;
    }
    push( @edge_x, $win_left );
    push( @edge_x, $win_left -$active_window_width -$win_offset_x );
    push( @edge_x, $win_right +$win_offset_x );
    push( @edge_x, $win_right -$active_window_width );
    push( @edge_y, $win_top );
    push( @edge_y, $win_top -$active_window_height -$win_offset_y );
    push( @edge_y, $win_bottom +$win_offset_y );
    push( @edge_y, $win_bottom -$active_window_height );
}

#------------------------------------------------------------------------------
# sort edges arrays
#------------------------------------------------------------------------------

@edge_x_sorted = sort{ $a <=> $b } @edge_x;
@edge_y_sorted = sort{ $a <=> $b } @edge_y;
if( $axis_rev == -1 ) {
    @edge_x_sorted = reverse(@edge_x_sorted);
    @edge_y_sorted = reverse(@edge_y_sorted);
}

#------------------------------------------------------------------------------
# find next edge in the appropriate direction and move window, if applicable
#------------------------------------------------------------------------------

if( $axis eq 'x' ) {
    foreach $x (@edge_x_sorted) {
    print "$x\n";
        if( $x < $panel_offset_W+$win_offset_x ) { next; }
        if( $x > $screen_width-$panel_offset_E-$active_window_width ) { next; }
        if( $x*$axis_rev > $active_window_x*$axis_rev ) {
            exec "xdotool getactivewindow windowmove $x y"
        }
    }
}
else {
    foreach $y (@edge_y_sorted) {
        if( $y < $panel_offset_N+$win_offset_y ) { next; }
        if( $y > $screen_height-$panel_offset_S-$active_window_height ) { next; }
        if( $y*$axis_rev > $active_window_y*$axis_rev ) {
            exec "xdotool getactivewindow windowmove x $y"
        }
    }
}
